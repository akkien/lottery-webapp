/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Buyable, ERC20BuyableInterface } from "../ERC20Buyable";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalSupply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_PURCHASED_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "purchasedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052683635c9adc5dea000006003553480156200001e57600080fd5b5060405162001060380380620010608339810160408190526200004191620002e3565b83516200005690600590602087019062000170565b5082516200006c90600690602086019062000170565b5060078190556200007e338362000088565b50505050620003c1565b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060046000828254620000f791906200035d565b90915550506001600160a01b03821660009081526020819052604081208054839290620001269084906200035d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200017e9062000384565b90600052602060002090601f016020900481019282620001a25760008555620001ed565b82601f10620001bd57805160ff1916838001178555620001ed565b82800160010185558215620001ed579182015b82811115620001ed578251825591602001919060010190620001d0565b50620001fb929150620001ff565b5090565b5b80821115620001fb576000815560010162000200565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023e57600080fd5b81516001600160401b03808211156200025b576200025b62000216565b604051601f8301601f19908116603f0116810190828211818310171562000286576200028662000216565b81604052838152602092508683858801011115620002a357600080fd5b600091505b83821015620002c75785820183015181830184015290820190620002a8565b83821115620002d95760008385830101525b9695505050505050565b60008060008060808587031215620002fa57600080fd5b84516001600160401b03808211156200031257600080fd5b62000320888389016200022c565b955060208701519150808211156200033757600080fd5b5062000346878288016200022c565b604087015160609097015195989097509350505050565b600082198211156200037f57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200039957607f821691505b60208210811415620003bb57634e487b7160e01b600052602260045260246000fd5b50919050565b610c8f80620003d16000396000f3fe6080604052600436106100e85760003560e01c806344c4dcc11161008a578063a457c2d711610059578063a457c2d714610266578063a9059cbb14610286578063d96a094a146102a6578063dd62ed3e146102bb57600080fd5b806344c4dcc1146101d957806370a082311461020657806395d89b411461023c578063a035b1fe1461025157600080fd5b806323b872dd116100c657806323b872dd14610167578063313ce5671461018757806339509351146101a35780633e7e178d146101c357600080fd5b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610148575b600080fd5b3480156100f957600080fd5b50610102610301565b60405161010f9190610a6a565b60405180910390f35b34801561012457600080fd5b50610138610133366004610adb565b610393565b604051901515815260200161010f565b34801561015457600080fd5b506004545b60405190815260200161010f565b34801561017357600080fd5b50610138610182366004610b05565b6103ab565b34801561019357600080fd5b506040516012815260200161010f565b3480156101af57600080fd5b506101386101be366004610adb565b6103cf565b3480156101cf57600080fd5b5061015960035481565b3480156101e557600080fd5b506101596101f4366004610b41565b60026020526000908152604090205481565b34801561021257600080fd5b50610159610221366004610b41565b6001600160a01b031660009081526020819052604090205490565b34801561024857600080fd5b5061010261040e565b34801561025d57600080fd5b50600754610159565b34801561027257600080fd5b50610138610281366004610adb565b61041d565b34801561029257600080fd5b506101386102a1366004610adb565b6104b4565b6102b96102b4366004610b63565b6104c2565b005b3480156102c757600080fd5b506101596102d6366004610b7c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606005805461031090610baf565b80601f016020809104026020016040519081016040528092919081815260200182805461033c90610baf565b80156103895780601f1061035e57610100808354040283529160200191610389565b820191906000526020600020905b81548152906001019060200180831161036c57829003601f168201915b5050505050905090565b6000336103a1818585610607565b5060019392505050565b6000336103b985828561072b565b6103c48585856107bd565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103a19082908690610409908790610c00565b610607565b60606006805461031090610baf565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104a75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103c48286868403610607565b6000336103a18185856107bd565b600354336000908152600260205260409020546104e0908390610c00565b11156105435760405162461bcd60e51b815260206004820152602c60248201527f455243323042757961626c653a2045786365656473206c696d69742c2063616e60448201526b6e6f7420627579206d6f726560a01b606482015260840161049e565b670de0b6b3a76400006007548261055a9190610c18565b6105649190610c37565b34146105be5760405162461bcd60e51b815260206004820152602360248201527f455243323042757961626c653a20696e76616c696420616d6f756e74206f66206044820152620cae8d60eb1b606482015260840161049e565b33600090815260026020526040812080548392906105dd908490610c00565b909155506105ed9050338261098b565b80600460008282546105ff9190610c00565b909155505050565b6001600160a01b0383166106695760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161049e565b6001600160a01b0382166106ca5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161049e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146107b757818110156107aa5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161049e565b6107b78484848403610607565b50505050565b6001600160a01b0383166108215760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161049e565b6001600160a01b0382166108835760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161049e565b6001600160a01b038316600090815260208190526040902054818110156108fb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161049e565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610932908490610c00565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161097e91815260200190565b60405180910390a36107b7565b6001600160a01b0382166109e15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161049e565b80600460008282546109f39190610c00565b90915550506001600160a01b03821660009081526020819052604081208054839290610a20908490610c00565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b81811015610a9757858101830151858201604001528201610a7b565b81811115610aa9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ad657600080fd5b919050565b60008060408385031215610aee57600080fd5b610af783610abf565b946020939093013593505050565b600080600060608486031215610b1a57600080fd5b610b2384610abf565b9250610b3160208501610abf565b9150604084013590509250925092565b600060208284031215610b5357600080fd5b610b5c82610abf565b9392505050565b600060208284031215610b7557600080fd5b5035919050565b60008060408385031215610b8f57600080fd5b610b9883610abf565b9150610ba660208401610abf565b90509250929050565b600181811c90821680610bc357607f821691505b60208210811415610be457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c1357610c13610bea565b500190565b6000816000190483118215151615610c3257610c32610bea565b500290565b600082610c5457634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220d8822fe8ff541ca4cf8ce8da96b872b62e999b7fe88ee0eab60b28dab0dd754964736f6c63430008090033";

export class ERC20Buyable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    totalSupply_: BigNumberish,
    price_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Buyable> {
    return super.deploy(
      name_,
      symbol_,
      totalSupply_,
      price_,
      overrides || {}
    ) as Promise<ERC20Buyable>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    totalSupply_: BigNumberish,
    price_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      totalSupply_,
      price_,
      overrides || {}
    );
  }
  attach(address: string): ERC20Buyable {
    return super.attach(address) as ERC20Buyable;
  }
  connect(signer: Signer): ERC20Buyable__factory {
    return super.connect(signer) as ERC20Buyable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20BuyableInterface {
    return new utils.Interface(_abi) as ERC20BuyableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Buyable {
    return new Contract(address, _abi, signerOrProvider) as ERC20Buyable;
  }
}
